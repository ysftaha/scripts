#!/bin/sh
# PERF: Convert to interrupt system https://en.wikipedia.org/wiki/Interrupt
# TODO: Refactor this crap into functions
touch /tmp/idle.dat
while true
do
  id=' '
	stat=' '
  prefix="^c#555555^^b#000000^[^c#ffffff^^b#000000^"
  gray="^c#555555^^b#000000^"
  norm="^c#ffffff^^b#000000^"
  suffix="^c#555555^^b#000000^]"
  sep="^c#555555^^b#000000^|^c#ffffff^"

  # ┌──────┐
  # │ Date │
  # └──────┘
  timesep="^c#555555^^b#000000^:^c#ffffff^"
	stat=$prefix"`date +%H$timesep%M`$suffix"

  # ┌──────────────┐
  # │ System stats │
  # └──────────────┘
  stat="$stat $prefix^c#ffffff^`sh $AUTO/mem` ^c#ffffff^`sh $AUTO/avgfreq` `sh $AUTO/cnsmp`^c#00d787^W"'^c#555555^|^c#FFFFFF^'

  (mpstat 4 1 | tail -n 1 | rev | cut -d' ' -f 1 | rev | cut -d'.' -f 1 | tee /tmp/idle.dat) &

  idle=`cat /tmp/idle.dat`
  if [ ! ${#idle} -lt 1 ] 
  then 
    usage=$((100 - $idle))
  else
    usage=0
  fi

  # FIXME update to usage=`printf "%2s\n" $usage`
  usage="`printf "%2s\n" $usage`"
  stat="$stat^c#ffffff^$usage% ^c#555555^@^c#FFFFFF^ `sensors | sed -n '/Package id/p' | cut -d'.' -f 1 | cut -d'+' -f2`°$suffix"

  # ┌────────┐
  # │ Radios │
  # └────────┘

  [ -n "`rfkill list wlan | grep 'Soft blocked: no'`" ] && stat=$stat" "
  [ -n "`rfkill list bluetooth | grep 'Soft blocked: no'`" ] && stat=$stat" "

  # ┌────────────────────────────┐
  # │ Headphone/earphone Battery │
  # └────────────────────────────┘
  stat="$stat $prefix"

  # Headphones
  hbat=`bluetoothctl info 94:DB:56:D5:44:21|grep "Battery Percentage"|cut -d'(' -f2|tr -d ')'`
  [ $hbat -lt 50 ] && [ -n "$hbat" ] && stat="$stat$hbat%$gray$sep$norm"

  ebat=`bluetoothctl info 83:36:54:B9:17:0B|grep "Battery Percentage"|cut -d'(' -f2|tr -d ')'`
  [ "$ebat" -lt 50 ] && [ -n "$ebat" ] && stat="$stat$ebat%$gray$sep$norm"

  # ┌──────────────────┐
  # │ Keyboard Battery │
  # └──────────────────┘
  connected=`bluetoothctl info FF:48:DE:58:48:B5|grep 'Connected: yes'`
  if [ -n "$connected" ] 
  then
    attr='/org/bluez/hci0/dev_FF_48_DE_58_48_B5/service0010/char0011'
    kbathex=`echo "menu gatt\nattribute-info $attr\nquit\n"|bluetoothctl|/bin/grep -A 1 "Value:"|tail -1|cut -d' ' -f3` 
    kbat=`echo $((0x$kbathex))`
    [ $kbat -lt 50 ] && [ -n "$kbat" ] && stat="$stat"K:$kbat%"$gray$sep$norm"
  fi

  # ┌────────────────┐
  # │ Tablet Battery │
  # └────────────────┘
  tbat=$(cat /sys/class/power_supply/wacom*/capacity)
  [ $tbat -lt 50 ] && [ -n "$tbat" ] && stat="$stat"T:$tbat%"$gray$sep$norm"

  # ┌─────────┐
  # │ Battery │
  # └─────────┘
  [ -f /sys/class/power_supply/BAT0/capacity ] && battery=`cut -d '%' -f 1 /sys/class/power_supply/BAT0/capacity`
  batstat=`cat /sys/class/power_supply/BAT0/status`
  stat=$stat
  if [ "$batstat" = 'Full' ]
  then
		stat=$stat"^c#00af87^^b#000000^"
    id=`notify-send.sh -p -r "$id" -u critical -a scripts/status "Battery fully charged"`
  elif [ $battery -lt 10 ]
  then
		stat=$stat"^b#FF0000^^c#ffffff^"
    [ ! $batstat = "Charging" ] && id=`notify-send.sh -p -r "$id" -u critical -a scripts/status "Battery critically low"`
  elif [ $battery -lt 75 ]
  then
		stat=$stat"^c#000000^^b#DDDD00^"
  fi
	stat=$stat"$battery%"
  stat=$stat"^c#555555^^b#000000^]"

  xsetroot -name "$stat"
  sleep 4
done
# vim: tw=0
